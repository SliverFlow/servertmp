// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"go.uber.org/zap"
	"server/api"
	system2 "server/api/system"
	"server/internal/biz"
	"server/internal/config"
	"server/internal/core/server"
	"server/internal/data"
	"server/internal/middleware"
	"server/internal/service/system"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(possess *config.Possess, log *zap.Logger) *server.HttpServer {
	dataData := data.NewData(possess)
	userRepo := data.NewUserRepo(log, possess, dataData)
	systemUserUsecase := biz.NewSysUserUsecase(log, userRepo)
	userService := system.NewUserService(log, systemUserUsecase)
	userApi := system2.NewSysUserApi(userService)
	apiGroup := system2.NewSystemApi(userApi)
	group := api.NewApiGroup(apiGroup)
	cors := middleware.NewCorsMiddleware(log)
	timeout := middleware.NewTimeoutMiddleware(log, possess)
	httpServer := server.RunServer(group, log, possess, cors, timeout)
	return httpServer
}
